@{
    ViewData["Title"] = "Dashboard 1";
}

<h2>Dashboard 1</h2>
<div>
    <canvas id="chartDashboard1" width="1000" height="400"></canvas>
</div>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener("DOMContentLoaded", async function () {
        let chart; // Variável global para o gráfico

        async function fetchDataDashboard1(dataObject) {
            const response = await fetch(`/Dashboard/GetData?dataObject=${dataObject}`);
            const data = await response.json();
            return data.contextResponses[0].contextElement.attributes[0].values;
        }

        function processAPIData(apiData) {
            const labels = [];
            const values = [];

            apiData.forEach(item => {
                labels.push(new Date(item.recvTime).toLocaleTimeString());
                values.push(item.attrValue);
            });

            return { labels, values };
        }

        async function updateChart() {
            const apiDataLuminosity = await fetchDataDashboard1("luminosity");
            const { labels: labels1, values: valuesLuminosity } = processAPIData(apiDataLuminosity);
            
            const apiDataTemperature = await fetchDataDashboard1("temperature");
            const { values: valuesTemperature } = processAPIData(apiDataTemperature);
            
            const apiDataHumidity = await fetchDataDashboard1("humidity");
            const { values: valuesHumidity } = processAPIData(apiDataHumidity);

           if (!chart) {
                // Criar o gráfico pela primeira vez
                const ctx = document.getElementById('chartDashboard1').getContext('2d');
                chart = new Chart(ctx, {
                    type: 'line',
                    data: {
                        labels: labels1,
                        datasets: [
                            {
                                label: 'Luminosidade - Dashboard 1',
                                data: valuesLuminosity,
                                fill: false,
                                borderColor: 'rgba(75, 192, 192, 1)',
                                tension: 0.1
                            },
                            {
                                label: 'Temperatura - Dashboard 1',
                                data: valuesTemperature,
                                fill: false,
                                borderColor: 'rgba(255, 99, 132, 1)',
                                tension: 0.1
                            },
                            {
                                label: 'Umidade - Dashboard 1',
                                data: valuesHumidity,
                                fill: false,
                                borderColor: 'rgba(54, 162, 235, 1)',
                                tension: 0.1
                            }
                        ]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true,
                                title: {
                                    display: true,
                                    text: 'Valor'
                                }
                            },
                            x: {
                                title: {
                                    display: true,
                                    text: 'Horário'
                                }
                            }
                        }
                    }
                });
            } else {
                // Atualizar os dados do gráfico existente
                chart.data.labels = labels1;
                chart.data.datasets[0].data = valuesLuminosity;
                chart.data.datasets[1].data = valuesTemperature;
                chart.data.datasets[2].data = valuesHumidity;
                chart.update(); // Atualizar o gráfico com novos dados
            }
        }

        // Atualizar o gráfico ao carregar a página
        await updateChart();

        // Atualizar o gráfico automaticamente a cada 1 minuto (60000 milissegundos)
        setInterval(updateChart, 1000);
    });
</script>
